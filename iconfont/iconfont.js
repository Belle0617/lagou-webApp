;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-mima" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M500.363636 605.090909l23.272727 0C542.906182 605.090909 558.545455 620.730182 558.545455 640l0 162.909091c0 19.269818-15.639273 34.909091-34.932364 34.909091l-23.272727 0c-19.293091 0-34.909091-15.639273-34.909091-34.909091l0-162.909091C465.454545 620.730182 481.070545 605.090909 500.363636 605.090909z"  ></path>' +
    '' +
    '<path d="M884.363636 488.727273l0 419.746909C884.363636 933.678545 863.511273 954.181818 837.818182 954.181818L186.181818 954.181818c-25.669818 0-46.545455-20.503273-46.545455-45.707636L139.636364 488.727273 884.363636 488.727273M954.181818 418.909091 69.818182 418.909091l0 489.565091C69.818182 972.288 121.902545 1024 186.181818 1024l651.636364 0c64.279273 0 116.363636-51.712 116.363636-115.525818L954.181818 418.909091 954.181818 418.909091z"  ></path>' +
    '' +
    '<path d="M861.090909 418.909091l-69.818182 0 0-69.818182c0-156.997818-131.095273-279.272727-279.272727-279.272727-151.831273 0-279.272727 127.418182-279.272727 279.272727l0 69.818182L162.909091 418.909091l0-69.818182C162.909091 158.743273 321.652364 0 512 0c187.950545 0 349.090909 152.273455 349.090909 349.090909L861.090909 418.909091z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-wode" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M248.848384 488.433664c-2.44224 0-4.368384 0.3584-5.881856 0.961536 2.05312-0.622592 4.245504-0.961536 6.503424-0.961536L248.848384 488.433664 248.848384 488.433664zM923.78112 757.349376c0.067584-1.24928 0.228352-2.473984 0.49152-3.654656C923.983872 754.235392 923.830272 755.392512 923.78112 757.349376L923.78112 757.349376zM968.808448 260.566016c0.012288-0.048128 0.012288-0.109568 0.012288-0.15872l0-0.586752C968.819712 260.074496 968.819712 260.327424 968.808448 260.566016L968.808448 260.566016zM923.75552 260.492288c0 0.050176 0 0.100352 0.013312 0.154624-0.013312-0.272384-0.013312-0.548864-0.013312-0.826368L923.75552 260.492288 923.75552 260.492288zM950.928384 936.170496c-6.337536-47.193088-20.200448-92.761088-41.194496-135.438336-4.104192-8.342528-8.454144-16.544768-13.063168-24.587264-0.012288-0.024576-0.023552-0.049152-0.055296-0.073728-19.985408-33.847296-44.504064-65.275904-73.084928-93.328384l-0.012288-0.012288c-6.213632-6.096896-12.612608-12.04736-19.203072-17.818624-46.990336-41.17504-101.239808-71.711744-159.089664-90.281984 10.472448-5.801984 20.599808-12.299264 30.326784-19.497984 11.081728-8.165376 21.627904-17.234944 31.547392-27.153408 52.15232-52.160512 80.88576-121.516032 80.88576-195.283968s-28.734464-143.122432-80.88576-195.279872C655.88224 86.20544 588.090368 57.587712 515.835904 56.554496c-1.143808-0.012288-2.294784-0.024576-3.439616-0.024576-1.149952 0-2.294784 0.012288-3.437568 0.024576-72.254464 1.033216-140.053504 29.650944-191.264768 80.862208-52.151296 52.15744-80.886784 121.51296-80.886784 195.279872s28.735488 143.123456 80.886784 195.283968c9.918464 9.918464 20.46464 18.988032 31.5392 27.153408 9.728 7.19872 19.861504 13.696 30.333952 19.497984-57.849856 18.57024-112.100352 49.106944-159.090688 90.281984-6.588416 5.772288-12.99456 11.721728-19.202048 17.818624-28.604416 28.076032-53.154816 59.53024-73.152512 93.4144-4.606976 8.042496-8.957952 16.243712-13.067264 24.587264-20.995072 42.677248-34.850816 88.245248-41.194496 135.438336-2.024448 15.118336 8.582144 29.018112 23.69536 31.04768 1.242112 0.165888 2.491392 0.251904 3.71712 0.251904 1.120256 0 2.214912-0.06144 3.309568-0.202752 10.928128-2.3808 19.750912-11.2896 21.460992-22.992896 12.730368-87.353344 54.361088-166.731776 114.204672-227.178496 71.023616-71.760896 167.68512-116.861952 272.149504-117.041152l0.590848 0c104.237056 0.357376 200.6784 45.415424 271.558656 117.041152 59.838464 60.44672 101.475328 139.826176 114.204672 227.178496 1.711104 11.677696 10.497024 20.575232 21.394432 22.980608 0.023552 0 0.036864 0.012288 0.06144 0.012288 1.09568 0.142336 2.197504 0.202752 3.316736 0.202752 1.22368 0 2.466816-0.086016 3.716096-0.251904C942.35136 965.188608 952.957952 951.288832 950.928384 936.170496L950.928384 936.170496zM511.806464 553.636864c-0.560128 0-1.114112 0-1.667072-0.012288-103.074816-0.756736-194.973696-72.370176-220.090368-168.431616-0.277504-1.045504-0.55296-2.10432-0.805888-3.162112-3.933184-15.881216-6.025216-32.381952-6.025216-49.334272 0-16.951296 2.092032-33.642496 6.025216-49.800192 0.252928-1.084416 0.528384-2.153472 0.805888-3.2256 25.252864-98.465792 118.007808-176.729088 221.75744-176.729088l1.180672 0c103.744512 0 196.5056 78.26432 221.758464 176.729088 0.277504 1.072128 0.55296 2.141184 0.805888 3.2256 3.931136 16.157696 6.023168 32.848896 6.023168 49.800192 0 16.953344-2.092032 33.453056-6.023168 49.334272-0.252928 1.057792-0.529408 2.116608-0.805888 3.162112-25.116672 96.06144-117.016576 167.67488-220.096512 168.431616C513.708032 553.636864 512.759808 553.636864 511.806464 553.636864L511.806464 553.636864zM511.806464 553.636864"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-zhiwei" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M886.454856 895.500371 136.474766 895.500371c-40.259936 0-73.009827-32.381501-73.009827-72.185043L63.464939 199.986777c0-39.806611 32.749892-72.186066 73.009827-72.186066l152.324244 0c31.722492 0 72.562643 16.72594 94.991468 38.903032l58.199517 57.542554c11.302417 11.17348 37.093826 21.735024 53.073776 21.735024l391.386992 0c40.258912 0 73.008804 32.384571 73.008804 72.186066l0 505.148965C959.458543 863.118869 926.709675 895.500371 886.454856 895.500371L886.454856 895.500371zM141.410172 192.044898c-7.343245 0-13.542434 6.110161-13.542434 13.345959l0 613.032044c0 7.235798 6.200212 13.344936 13.542434 13.344936l740.107231 0c7.338129 0 13.543458-6.109138 13.543458-13.344936L895.060861 321.617975c0-7.236821-6.205329-13.344936-13.543458-13.344936L495.279688 308.273039c-31.308053 0-71.602781-16.451694-93.742011-38.261419l-57.435107-56.590879c-11.145851-10.990309-36.601616-21.375843-52.371788-21.375843L141.410172 192.044898 141.410172 192.044898z"  ></path>' +
    '' +
    '<path d="M136.474766 196.649775"  ></path>' +
    '' +
    '<path d="M767.547699 426.963255c0 16.019859-12.986779 29.007661-29.007661 29.007661L284.870538 455.970916c-16.020882 0-29.007661-12.986779-29.007661-29.007661l0-5.946432c0-16.019859 12.986779-29.007661 29.007661-29.007661l453.670523 0c16.019859 0 29.007661 12.986779 29.007661 29.007661L767.548722 426.963255z"  ></path>' +
    '' +
    '<path d="M767.547699 575.35084c0 16.019859-12.986779 29.007661-29.007661 29.007661L284.870538 604.358501c-16.020882 0-29.007661-12.986779-29.007661-29.007661l0-5.946432c0-16.019859 12.986779-29.007661 29.007661-29.007661l453.670523 0c16.019859 0 29.007661 12.986779 29.007661 29.007661L767.548722 575.35084z"  ></path>' +
    '' +
    '<path d="M767.547699 723.738425c0 16.019859-12.986779 29.007661-29.007661 29.007661L284.870538 752.746086c-16.020882 0-29.007661-12.986779-29.007661-29.007661l0-5.946432c0-16.019859 12.986779-29.007661 29.007661-29.007661l453.670523 0c16.019859 0 29.007661 12.986779 29.007661 29.007661L767.548722 723.738425z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-sousuo-sousuo" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M691.881 249.91c-122.036-122.092-319.94-122.092-442.033 0s-122.093 319.997 0 442.033c56.558 56.574 134.7 91.567 221.017 91.567 86.316 0 164.458-34.994 221.016-91.567 56.575-56.558 91.568-134.701 91.568-221.017 0-86.316-34.994-164.458-91.567-221.016zM181.8 759.992c-74.010-73.991-119.787-176.22-119.787-289.14 0-225.802 183.050-408.852 408.852-408.852 225.803 0 408.852 183.050 408.852 408.852 0 112.92-45.778 215.149-119.787 289.139-73.985 73.966-176.183 119.713-289.065 119.713-112.883 0-215.080-45.747-289.065-119.713zM945.517 945.579c-10.099 10.115-24.058 16.372-39.48 16.372s-29.381-6.257-39.479-16.371l-78.903-78.959c-10.097-10.097-16.342-24.045-16.342-39.452 0-30.814 24.98-55.792 55.792-55.792 15.406 0 29.355 6.245 39.452 16.341l78.958 78.903c10.142 10.087 16.418 24.050 16.418 39.479s-6.277 29.393-16.416 39.477z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)